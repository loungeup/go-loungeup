// Code generated by MockGen. DO NOT EDIT.
// Source: res.go
//
// Generated by this command:
//
//	mockgen -source res.go -destination=./mocks/mock_res.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	resprot "github.com/jirenius/go-res/resprot"
	gomock "go.uber.org/mock/gomock"
)

// MockRESRequester is a mock of RESRequester interface.
type MockRESRequester struct {
	ctrl     *gomock.Controller
	recorder *MockRESRequesterMockRecorder
	isgomock struct{}
}

// MockRESRequesterMockRecorder is the mock recorder for MockRESRequester.
type MockRESRequesterMockRecorder struct {
	mock *MockRESRequester
}

// NewMockRESRequester creates a new mock instance.
func NewMockRESRequester(ctrl *gomock.Controller) *MockRESRequester {
	mock := &MockRESRequester{ctrl: ctrl}
	mock.recorder = &MockRESRequesterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRESRequester) EXPECT() *MockRESRequesterMockRecorder {
	return m.recorder
}

// Request mocks base method.
func (m *MockRESRequester) Request(subject string, request resprot.Request) resprot.Response {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Request", subject, request)
	ret0, _ := ret[0].(resprot.Response)
	return ret0
}

// Request indicates an expected call of Request.
func (mr *MockRESRequesterMockRecorder) Request(subject, request any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Request", reflect.TypeOf((*MockRESRequester)(nil).Request), subject, request)
}
