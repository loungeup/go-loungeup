// Code generated by MockGen. DO NOT EDIT.
// Source: proxy_db.go
//
// Generated by this command:
//
//	mockgen -source proxy_db.go -destination=./mocks/mock_proxy_db.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/loungeup/go-loungeup/client/models"
	gomock "go.uber.org/mock/gomock"
)

// MockProxyDBManager is a mock of ProxyDBManager interface.
type MockProxyDBManager struct {
	ctrl     *gomock.Controller
	recorder *MockProxyDBManagerMockRecorder
	isgomock struct{}
}

// MockProxyDBManagerMockRecorder is the mock recorder for MockProxyDBManager.
type MockProxyDBManagerMockRecorder struct {
	mock *MockProxyDBManager
}

// NewMockProxyDBManager creates a new mock instance.
func NewMockProxyDBManager(ctrl *gomock.Controller) *MockProxyDBManager {
	mock := &MockProxyDBManager{ctrl: ctrl}
	mock.recorder = &MockProxyDBManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProxyDBManager) EXPECT() *MockProxyDBManagerMockRecorder {
	return m.recorder
}

// ReadBooking mocks base method.
func (m *MockProxyDBManager) ReadBooking(selector *models.BookingSelector) (*models.Booking, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadBooking", selector)
	ret0, _ := ret[0].(*models.Booking)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadBooking indicates an expected call of ReadBooking.
func (mr *MockProxyDBManagerMockRecorder) ReadBooking(selector any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadBooking", reflect.TypeOf((*MockProxyDBManager)(nil).ReadBooking), selector)
}

// ReadBookingById mocks base method.
func (m *MockProxyDBManager) ReadBookingById(selector *models.BookingSelectorById) (*models.Booking, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadBookingById", selector)
	ret0, _ := ret[0].(*models.Booking)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadBookingById indicates an expected call of ReadBookingById.
func (mr *MockProxyDBManagerMockRecorder) ReadBookingById(selector any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadBookingById", reflect.TypeOf((*MockProxyDBManager)(nil).ReadBookingById), selector)
}
